# -- general -------------------------------------------------------------------

# First remove *all* keybindings
unbind-key -a
unbind -a -T root
#unbind -a -T copy-mode-vi
# Now reinsert all the regular tmux keys
#bind-key C-b send-prefix
#bind-key C-o rotate-window
#bind-key C-z suspend-client
bind-key Space next-layout
#bind-key ! break-pane
#bind-key " split-window
#bind-key # list-buffers
#bind-key $ command-prompt -I #S "rename-session '%%'"
#bind-key % split-window -h
#bind-key & confirm-before -p "kill-window #W? (y/n)" kill-window
#bind-key ' command-prompt -p index "select-window -t ':%%'"
#bind-key ( switch-client -p
#bind-key ) switch-client -n
#bind-key , command-prompt -I #W "rename-window '%%'"
#bind-key - delete-buffer
#bind-key . command-prompt "move-window -t '%%'"
bind-key 0 select-window -t :0
bind-key 1 select-window -t :1
bind-key 2 select-window -t :2
bind-key 3 select-window -t :3
bind-key 4 select-window -t :4
bind-key 5 select-window -t :5
bind-key 6 select-window -t :6
bind-key 7 select-window -t :7
bind-key 8 select-window -t :8
bind-key 9 select-window -t :9
bind-key : command-prompt
#bind-key ; last-pane
#bind-key = choose-buffer
#bind-key ? list-keys
#bind-key D choose-client
#bind-key L switch-client -l
bind-key [ copy-mode
#bind-key ] paste-buffer
#bind-key c new-window
bind-key d detach-client
#bind-key f command-prompt "find-window '%%'"
#bind-key i display-message
#bind-key l last-window
#bind-key n next-window
#bind-key o select-pane -t :.+
#bind-key p previous-window
#bind-key q display-panes
#bind-key r refresh-client
#bind-key s choose-session
#bind-key t clock-mode
#bind-key w choose-window
#bind-key x confirm-before -p "kill-pane #P? (y/n)" kill-pane
#bind-key { swap-pane -U
#bind-key } swap-pane -D
#bind-key ~ show-messages
#bind-key PPage copy-mode -u
bind-key -r Up select-pane -U
bind-key -r Down select-pane -D
bind-key -r Left select-pane -L
bind-key -r Right select-pane -R
#bind-key -r M-1 select-layout even-horizontal
#bind-key -r M-2 select-layout even-vertical
#bind-key -r M-3 select-layout main-horizontal
#bind-key -r M-4 select-layout main-vertical
#bind-key -r M-5 select-layout tiled
#bind-key -r M-n next-window -a
#bind-key -r M-o rotate-window -D
#bind-key -r M-p previous-window -a
#bind-key -r M-Up resize-pane -U 5
#bind-key -r M-Down resize-pane -D 5
#bind-key -r M-Left resize-pane -L 5
#bind-key -r M-Right resize-pane -R 5
#bind-key -r C-Up resize-pane -U
#bind-key -r C-Down resize-pane -D
#bind-key -r C-Left resize-pane -L

# reload config
#bind r source-file ~/.tmux.conf

# Set nushell as default shell
set -g default-shell /usr/local/bin/nu

# Do not lose neovim colorscheme plz
# set-option -ga terminal-overrides ",xterm-256color:Tc"
set -ga terminal-overrides ",xterm-256color:Tc"

#setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 5000                 # boost history

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# -- navigation ----------------------------------------------------------------

# -- Use only C-W as prefix ----------------------------------------------------
set -gu prefix2
unbind C-a
unbind C-b
set -g prefix C-w
bind C-w send-prefix


# -- copy mode -----------------------------------------------------------------
bind -T copy-mode-vi Escape send-keys -X cancel
bind -T copy-mode-vi q      send -X cancel
bind -T copy-mode-vi Up     send -X cursor-up
bind -T copy-mode-vi Down   send -X cursor-down
bind -T copy-mode-vi Left   send -X cursor-left
bind -T copy-mode-vi Right  send -X cursor-right
bind -T copy-mode-vi C-u    send -X page-up
bind -T copy-mode-vi C-d    send -X page-down

# -- send C-w hjkl when vim/neovim ---------------------------------------------
# vim-tmux-navigator
#unbind-key    -T copy-mode-vi Enter
unbind-key    -T root         Enter
unbind Enter
unbind-key Enter
unbind h
unbind j
unbind k
unbind l
unbind m
unbind 'h'
unbind 'j'
unbind 'k'
unbind 'l'
unbind 'm'

# switch window
bind-key n select-window -n
bind-key m select-window -p

# Smart pane switching with awareness of vim splits
#bind -n C-k run-shell 'tmux-vim-select-pane -U'
#bind -n C-j run-shell 'tmux-vim-select-pane -D'
#bind -n C-h run-shell 'tmux-vim-select-pane -L'
#bind -n C-l run-shell 'tmux-vim-select-pane -R'
#bind -n "C-\\" run-shell 'tmux-vim-select-pane -l'


is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_vim="ps -o state=,tty=,comm= | grep -iqE '^[^TXZ ]+ +#{s|/dev/||:pane_tty}\s+(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key 'h' 'send-keys C-w h'
bind-key 'j' 'send-keys C-w j'
bind-key 'k' 'send-keys C-w k'
bind-key 'l' 'send-keys C-w l'
#bind '\\' if-shell "$is_vim" 'send-keys C-w \\'  'select-pane -l'

#bind 'v' if-shell "$is_vim" 'send-keys C-w v'  'split-window -h'
#bind 's' if-shell "$is_vim" 'send-keys C-w n'  'split-window -v'
#bind 'n' if-shell "$is_vim" 'send-keys C-w n' 'split-window -v'

#bind 'H' if-shell "$is_vim" 'send-keys C-w H'
#bind 'J' if-shell "$is_vim" 'send-keys C-w J' 
#bind 'K' if-shell "$is_vim" 'send-keys C-w K' 
#bind 'L' if-shell "$is_vim" 'send-keys C-w L' 

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
#bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
#bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
#bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
#tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
#if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
#if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

#bind-key -T copy-mode-vi 'C-h' select-pane -L
#bind-key -T copy-mode-vi 'C-j' select-pane -D
#bind-key -T copy-mode-vi 'C-k' select-pane -U
#bind-key -T copy-mode-vi 'C-l' select-pane -R
#bind-key -T copy-mode-vi 'C-\' select-pane -l

# -- User defined status messages ------------------------------------------------
# host health
#disk_use="#(df --output=pcent -h / | sed '1d;s/[^0-9]//g')"
#load_avg="#(cut -d ' ' -f1 /proc/loadavg)"
#uptime="#(uptime -p | cut -d ',' -f1)"
#host_health="↯ $load_avg | ∫ $disk_use% | ↑ $uptime"

#tasks_count="#(graphctl todo -q)"
#mails_count="0"
#crdb_count="#(cat /tmp/crdb.bar)"
#messages="#($is_vim) | $crdb_count | $mails_count mails | $tasks_count tasks"

# weather
#weather='#(curl -s wttr.in/Saint-Herblain\?format\="%%l:+%%t+%%w+(%%C)&period=60")'

# -- Theme (neovim matching duskfox) ---------------------------------------------

#icon_box="❐"
#icon_circle="●"
#icon_up="↑"       # U+2191
#icon_down="↓"    # U+2193

#color_black="#000000"
#color_purple="#27253f"
#color_light_purple="#555180"
#color_orange="#d3a470"
#color_light_blue="#a7e1e7"
#color_dark_blue="#5ebdd5"
#color_dark_pink="#ce6289"

#theme_color_bg_1="$color_purple"
#theme_color_fg_1="$color_orange"

# ------ Global
#set -g mode-style "fg=$theme_color_fg_1,bg=$theme_color_bg_1"
#set -g message-style "fg=$theme_color_fg_1,bg=$theme_color_bg_1"
#set -g message-command-style "fg=$theme_color_fg_1,bg=$theme_color_bg_1"
# ------ Pane
#set -g pane-border-style "fg=$color_dark_pink"
#set -g pane-active-border-style "fg=$color_purple"
#set -g status "on"
#set -g status-justify "left"
# ------- Status bar
#set -g status-style "fg=$color_orange,bg=$color_purple"
#set -g status-left-length "100"
#set -g status-right-length "100"
#set -g status-left-style NONE
#set -g status-right-style NONE
#set -g status-left "#[fg=#2f3239,bg=#5a93aa,bold] #S #[fg=#5a93aa,bg=#0f1c1e,nobold,nounderscore,noitalics]"
#set -g status-left "#[fg=#2f3239,bg=#27253f,bold] #S #[fg=#5a93aa,bg=#27253f,nobold,nounderscore,noitalics]|"
#set -g status-left " ❐ #S | $host_health | $weather "
#set -g status-right "#[fg=$color_dark_pink,bg=$theme_color_bg_1] #{?client_prefix,#[reverse]C-w#[noreverse] ,} #[fg=$color_dark_pink,bg=$theme_color_bbg_1,nobold,nounderscore,noitalics] $messages |#[fg=$color_dark_pink,bg=$color_purple] %Y-%m-%d | %I:%M %p #[fg=#5a93aa,bg=$color_purple,nobold,nounderscore,noitalics]#[fg=$color_orange,bg=$color_purple,bold] | #h "
# ------ Windows status
#set -g status-justify "centre"
#setw -g window-status-activity-style "underscore,fg=$color_black,bg=$color_purple"
#setw -g window-status-separator ""
#setw -g window-status-style "NONE,fg=$color_black,bg=$color_purple"
# Format of background windows
#setw -g window-status-format "#[fg=$color_dark_blue,bg=$color_purple,nobold,nounderscore,noitalics] [#I] #W #F #[fg=$color_dark_blue,bg=$color_purple,nobold,nounderscore,noitalics]"
# Format of current window  
#setw -g window-status-current-format "#[fg=$color_dark_blue,bg=$color_light_purple,nobold,nounderscore,noitalics]#[fg=$color_dark_blue,bg=$color_light_purple,bold] [#I] #W #F #[fg=$color_dark_blue,bg=$color_light_purple,nobold,nounderscore,noitalics]"

# Rose Pine Moon theme
set -g @plugin 'rose-pine/tmux'
# ... alongside
set -g @plugin 'tmux-plugins/tpm'
# To update plugin for future revisions or bug fixes, do the "Prefix + U" keycombo
set -g @rose_pine_variant 'moon' # Options are 'main', 'moon' or 'dawn'
set -g @rose_pine_host 'on'
set -g @rose_pine_date_time '%D %R'
set -g @rose_pine_directory 'on'


# Set Tmux plugin to resurrect every time workstation restarted (Ctrl+A Ctrl+S to Save / Ctrl+A Ctrl+R to Resurrect)
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# for neovim
set -g @resurrect-strategy-nvim 'session'
# Automatically restore tmux windows when tmux starts.
set -g @continuum-restore 'on'

# Don't auto-launch tmx at machine boot.  Give me a chance to gcert first.
set -g @continuum-boot 'off'

# Preserves what was readable in each pane.
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'

run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
